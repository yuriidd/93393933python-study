# -*- coding: utf-8 -*-
"""Created on Wed Jul 13 16:47:34 2022@author: xiaom"""


# ============== WHILE , FOR , list_generation
# ============= NUMPY loop


counter = 1
done = False
while counter <= 10 and not done:
    print('ok')
    done = True
    counter +=1
#######
word_list = ['korok','bird','MooreMoore']
let_list = []
for word in word_list:
    let_set = set()
    for let in word:
        let_set.update(let)
    
    let_list.append(let_set)

print(let_list)
set(let_list[0]) & set(let_list[2])
let_list[0] & let_list[2] & let_list[1]
###############

let_set.append(let)
let = 2
let_set.update(let)
type(let_set)
#########
[x*x for x in range(1,4)]
xxx = []
xxx= [x for x in 'hupilaret' if x not in 'yua']

print('idddifffrrri'.strip('i'))
##########
words = ['cat', 'window', 'defenestrate', 'spacetraveler']
for w in words[:]:
    print(w)
    words.insert(0, w)
    
words
words[:]
#########
def my_range(start, end, step):
    while start <= end:
        yield start
        start += step
for x in my_range(1, 10, 0.5):
    print(x)
################

cell = []
for i in [2,1,2,3,4]:
    for k in [3,4,2,1]:
        if i != k:
            cell.append((i,k))
zell = [1,2,3,4,5,6,7,8,9,0]

cell = [(i,k) for i in [2,1,2,3,4] for k in [3,4,2,1] if i!=k ]
cell = [(i,k) for i in [2,1,2,3,4] for k in [3,4,2,1] ]
freshfruit = ['  banana', '  loganberry ', 'passion fruit  ']
zell = [weapon.strip() for weapon in freshfruit]

for fruit in freshfruit: zell.append(fruit.strip())

matrix = [[1, 2, 3, 4],[5, 6, 7, 8],[9, 10, 11, 12],]
list(zip(*matrix))
zip(*matrix)
zell = list(zip([2,1,2,3,4],[3,4,2,1,8]))
zell

x = [1, 2, 3]
y = [4, 5, 6]
zipped = zip(x, y)
list(zipped)

##############
item_idx
1,0,0 < row_idx
0,1,0 
0,0,1

[ [ 1 if item_idx == row_idx else 0 
   for item_idx in range(0, 3) ] 
 for row_idx in range(0, 3) ]

[ 1 
   if item_idx == row_idx else 0 
   for item_idx in range(0, 3) ] 

[item_idx for item_idx in range(0, 3) ]
[0[0,1,2],1[0,1,2],2[0,1,2]]
aell=[]
# colell=[]
for row_index in range(0,3):
    colell=[]
    for col_index in range(0,3):
        if col_index == row_index:
            colell.append(1)
        else:
            colell.append(0)
    aell.append(colell)
    
print(aell)

[[x for x in range(0,3)] for y in range(0,3)]
# оно там сверху все вверх дном))
names = [ 'Bob', 'JOHN', 'alice', 'bob', 'ALICE', 'J', 'Bob' ]
{ name[0].upper() + name[1:].lower() for name in names if len(name) > 1 }
###
zell = [1,2,3,4,5,6,7,8,9,0]

{name.capitalize() for name in names 
 if len(name)>1 
 if name[0].upper()!='A'}

###########
'''Homework:                Task 1
Make a program that has some sentence (a string) on input and 
returns a dict containing all unique words as keys and the number 
of occurrences as values. '''
#           вариант 1
sentence = 'Make a program that has some sentence a a that'
sent_dict = {}
for key in set(sentence.lower().split()):
    value = 0
    for word in sentence.lower().split():
        if key == word:
            value +=1
    sent_dict[key]=value
print(sent_dict)

sentence.split()[0]
for key in sentence.split():
    print(key)
#           вариант2  
sent_dict['make']=sent_dict['make'] + 1

sentence = 'Make a program that has some sentence a a that that'
sent_dict = {}
for key in set(sentence.lower().split()):
    sent_dict[key]=0
    for word in sentence.lower().split():
        if key == word:
            sent_dict[key] += 1
print(sent_dict)

####
'''                 Task 2
Input data:
stock = {
    "banana": 6,
    "apple": 0,
    "orange": 32,
    "pear": 15
}
prices = {
    "banana": 4,
    "apple": 2,
    "orange": 1.5,
    "pear": 3
}
Create a function which takes as input two dicts with structure 
mentioned above, then computes and returns the total price of stock.'''

stock = {
    "banana": 6,
    "apple": 0,
    "orange": 32,
    "pear": 15
}
prices = {
    "banana": 4,
    "apple": 2,
    "orange": 1.5,
    "pear": 3
}
#           вариант1 
total = {}
for key in stock.keys():
    total[key]=stock[key]*prices[key]
print(total)
#           вариант2 
total = {key:stock[key]*prices[key] for key in stock.keys()}
print(total)

#           вариант3 
def totale(xx,yy):
    total1 = {key:xx[key]*yy[key] for key in xx.keys()}
    return total1
print(totale(prices,stock))

###########
'''             Task 3
List comprehension exercise
Use a list comprehension to make a list containing tuples (i, j) 
where `i` goes from 1 to 10 and `j` is corresponding to `i` squared.'''

comp_list = [(i,i**2) for i in range(1,11)]
print(comp_list)
######################
###########
###########
###########
###########


europe = { 'spain': { 'capital':'madrid', 'population':46.77 },
           'france': { 'capital':'paris', 'population':66.03 },
           'germany': { 'capital':'berlin', 'population':80.62 },
           'norway': { 'capital':'oslo', 'population':5.084 } }

europe['spain']['population'] = europe['spain']['population'] - \
    europe['norway']['population']

a = europe['spain']['population']
a 
a = europe['spain']['population'] - europe['norway']['population']


import pandas as pd

# =================
oop = [11,12,13,14,15,16,17,18,19,20]
for i, k in enumerate(oop, 1):
    print(i,k)

# =================             FOR LOOP in NUMPY
import numpy as np

ttt = ['74', '74', '72', '72', '73', '69', '69', '71', '76', '71', '73', '73', '74', '74', '69', '70', '73', '75', '78', '79', '76', '74', '76', '72', '71', '75', '77', '74', '73', '74', '78', '73', '75', '73', '75', '75', '74', '69', '71', '74', '73', '73', '76', '74', '74', '70', '72', '77', '74', '70', '73', '75', '76', '76', '78', '74', '74', '76', '77', '81', '78', '75', '77', '75', '76', '74', '72', '72', '75', '73', '73', '73', '70', '70', '70', '76', '68', '71', '72', '75', '75', '75', '75', '68', '74', '78', '71', '73', '76', '74', '74', '79', '75', '73', '76', '74', '74', '73', '72', '74', '73', '74', '72', '73', '69', '72', '73', '75', '75', '73', '72', '72', '76', '74', '72', '77', '74', '77', '75', '76', '80', '74', '74', '75', '78', '73', '73', '74', '75', '76', '71', '73', '74', '76', '76', '74', '73', '74', '70', '72', '73', '73', '73', '73', '71', '74', '74', '72', '74', '71', '74', '73', '75', '75', '79', '73', '75', '76', '74', '76', '78', '74', '76', '72', '74', '76', '74', '75', '78', '75', '72', '74', '72', '74', '70', '71', '70', '75', '71', '71', '73', '72', '71', '73', '72', '75', '74', '74', '75', '73', '77', '73', '76', '75', '74', '76', '75', '73', '71', '76', '75', '72', '71', '77', '73', '74', '71', '72', '74', '75', '73', '72', '75', '75', '74', '72', '74', '71', '70', '74', '77', '77', '75', '75', '78', '75', '76', '73', '75', '75', '79', '77', '76', '71', '75', '74', '69', '71', '76', '72', '72', '70', '72', '73', '71', '72', '71', '73', '72', '73', '74', '74', '72', '75', '74', '74', '77', '75', '73', '72', '71', '74', '77', '75', '75', '75', '78', '78', '74', '76', '78', '76', '70', '72', '80', '74', '74', '71', '70', '72', '71', '74', '71', '72', '71', '74', '69', '76', '75', '75', '76', '73', '76', '73', '77', '73', '72', '72', '77', '77', '71', '74', '74', '73', '78', '75', '73', '70', '74', '72', '73', '73', '75', '75', '74', '76', '73', '74', '75', '75', '72', '73', '73', '72', '74', '78', '76', '73', '74', '75', '70', '75', '71', '72', '78', '75', '73', '73', '71', '75', '77', '72', '69', '73', '74', '72', '70', '75', '70', '72', '72', '74', '73', '74', '76', '75', '80', '72', '75', '73', '74', '74', '73', '75', '75', '71', '73', '75', '74', '74', '72', '74', '74', '74', '73', '76', '75', '72', '73', '73', '73', '72', '72', '72', '72', '71', '75', '75', '74', '73', '75', '79', '74', '76', '73', '74', '74', '72', '74', '74', '75', '78', '74', '74', '74', '77', '70', '73', '74', '73', '71', '75', '71', '72', '77', '74', '70', '77', '73', '72', '76', '71', '76', '78', '75', '73', '78', '74', '79', '75', '76', '72', '75', '75', '70', '72', '70', '74', '71', '76', '73', '76', '71', '69', '72', '72', '69', '73', '69', '73', '74', '74', '72', '71', '72', '72', '76', '76', '76', '74', '76', '75', '71', '72', '71', '73', '75', '76', '75', '71', '75', '74', '72', '73', '73', '73', '73', '76', '72', '76', '73', '73', '73', '75', '75', '77', '73', '72', '75', '70', '74', '72', '80', '71', '71', '74', '74', '73', '75', '76', '73', '77', '72', '73', '77', '76', '71', '75', '73', '74', '77', '71', '72', '73', '69', '73', '70', '74', '76', '73', '73', '75', '73', '79', '74', '73', '74', '77', '75', '74', '73', '77', '73', '77', '74', '74', '73', '77', '74', '77', '75', '77', '75', '71', '74', '70', '79', '72', '72', '70', '74', '74', '72', '73', '72', '74', '74', '76', '82', '74', '74', '70', '73', '73', '74', '77', '72', '76', '73', '73', '72', '74', '74', '71', '72', '75', '74', '74', '77', '70', '71', '73', '76', '71', '75', '74', '72', '76', '79', '76', '73', '76', '78', '75', '76', '72', '72', '73', '73', '75', '71', '76', '70', '75', '74', '75', '73', '71', '71', '72', '73', '73', '72', '69', '73', '78', '71', '73', '75', '76', '70', '74', '77', '75', '79', '72', '77', '73', '75', '75', '75', '73', '73', '76', '77', '75', '70', '71', '71', '75', '74', '69', '70', '75', '72', '75', '73', '72', '72', '72', '76', '75', '74', '69', '73', '72', '72', '75', '77', '76', '80', '77', '76', '79', '71', '75', '73', '76', '77', '73', '76', '70', '75', '73', '75', '70', '69', '71', '72', '72', '73', '70', '70', '73', '76', '75', '72', '73', '79', '71', '72', '74', '74', '74', '72', '76', '76', '72', '72', '71', '72', '72', '70', '77', '74', '72', '76', '71', '76', '71', '73', '70', '73', '73', '72', '71', '71', '71', '72', '72', '74', '74', '74', '71', '72', '75', '72', '71', '72', '72', '72', '72', '74', '74', '77', '75', '73', '75', '73', '76', '72', '77', '75', '72', '71', '71', '75', '72', '73', '73', '71', '70', '75', '71', '76', '73', '68', '71', '72', '74', '77', '72', '76', '78', '81', '72', '73', '76', '72', '72', '74', '76', '73', '76', '75', '70', '71', '74', '72', '73', '76', '76', '73', '71', '68', '71', '71', '74', '77', '69', '72', '76', '75', '76', '75', '76', '72', '74', '76', '74', '72', '75', '78', '77', '70', '72', '79', '74', '71', '68', '77', '75', '71', '72', '70', '72', '72', '73', '72', '74', '72', '72', '75', '72', '73', '74', '72', '78', '75', '72', '74', '75', '75', '76', '74', '74', '73', '74', '71', '74', '75', '76', '74', '76', '76', '73', '75', '75', '74', '68', '72', '75', '71', '70', '72', '73', '72', '75', '74', '70', '76', '71', '82', '72', '73', '74', '71', '75', '77', '72', '74', '72', '73', '78', '77', '73', '73', '73', '73', '73', '76', '75', '70', '73', '72', '73', '75', '74', '73', '73', '76', '73', '75', '70', '77', '72', '77', '74', '75', '75', '75', '75', '72', '74', '71', '76', '71', '75', '76', '83', '75', '74', '76', '72', '72', '75', '75', '72', '77', '73', '72', '70', '74', '72', '74', '72', '71', '70', '71', '76', '74', '76', '74', '74', '74', '75', '75', '71', '71', '74', '77', '71', '74', '75', '77', '76', '74', '76', '72', '71', '72', '75', '73', '68', '72', '69', '73', '73', '75', '70', '70', '74', '75', '74', '74', '73', '74', '75', '77', '73', '74', '76', '74', '75', '73', '76', '78', '75', '73', '77', '74', '72', '74', '72', '71', '73', '75', '73', '67', '67', '76', '74', '73', '70', '75', '70', '72', '77', '79', '78', '74', '75', '75', '78', '76', '75', '69', '75', '72', '75', '73', '74', '75', '75', '73', '180', '215', '210', '210', '188', '176', '209', '200', '231', '180', '188', '180', '185', '160', '180', '185', '189', '185', '219', '230', '205', '230', '195', '180', '192', '225', '203', '195', '182', '188', '200', '180', '200', '200', '245', '240', '215', '185', '175', '199', '200', '215', '200', '205', '206', '186', '188', '220', '210', '195', '200', '200', '212', '224', '210', '205', '220', '195', '200', '260', '228', '270', '200', '210', '190', '220', '180', '205', '210', '220', '211', '200', '180', '190', '170', '230', '155', '185', '185', '200', '225', '225', '220', '160', '205', '235', '250', '210', '190', '160', '200', '205', '222', '195', '205', '220', '220', '170', '185', '195', '220', '230', '180', '220', '180', '180', '170', '210', '215', '200', '213', '180', '192', '235', '185', '235', '210', '222', '210', '230', '220', '180', '190', '200', '210', '194', '180', '190', '240', '200', '198', '200', '195', '210', '220', '190', '210', '225', '180', '185', '170', '185', '185', '180', '178', '175', '200', '204', '211', '190', '210', '190', '190', '185', '290', '175', '185', '200', '220', '170', '220', '190', '220', '205', '200', '250', '225', '215', '210', '215', '195', '200', '194', '220', '180', '180', '170', '195', '180', '170', '206', '205', '200', '225', '201', '225', '233', '180', '225', '180', '220', '180', '237', '215', '190', '235', '190', '180', '165', '195', '200', '190', '190', '185', '185', '205', '190', '205', '206', '220', '208', '170', '195', '210', '190', '211', '230', '170', '185', '185', '241', '225', '210', '175', '230', '200', '215', '198', '226', '278', '215', '230', '240', '184', '219', '170', '218', '190', '225', '220', '176', '190', '197', '204', '167', '180', '195', '220', '215', '185', '190', '205', '205', '200', '210', '215', '200', '205', '211', '190', '208', '200', '210', '232', '230', '210', '220', '210', '202', '212', '225', '170', '190', '200', '237', '220', '170', '193', '190', '150', '220', '200', '190', '185', '185', '200', '172', '220', '225', '190', '195', '219', '190', '197', '200', '195', '210', '177', '220', '235', '180', '195', '195', '190', '230', '190', '200', '190', '190', '200', '200', '184', '200', '180', '219', '187', '200', '220', '205', '190', '170', '160', '215', '175', '205', '200', '214', '200', '190', '180', '205', '220', '190', '215', '235', '191', '200', '181', '200', '210', '240', '185', '165', '190', '185', '175', '155', '210', '170', '175', '220', '210', '205', '200', '205', '195', '240', '150', '200', '215', '202', '200', '190', '205', '190', '160', '215', '185', '200', '190', '210', '185', '220', '190', '202', '205', '220', '175', '160', '190', '200', '229', '206', '220', '180', '195', '175', '188', '230', '190', '200', '190', '219', '235', '180', '180', '180', '200', '234', '185', '220', '223', '200', '210', '200', '210', '190', '177', '227', '180', '195', '199', '175', '185', '240', '210', '180', '194', '225', '180', '205', '193', '230', '230', '220', '200', '249', '190', '208', '245', '250', '160', '192', '220', '170', '197', '155', '190', '200', '220', '210', '228', '190', '160', '184', '180', '180', '200', '176', '160', '222', '211', '195', '200', '175', '206', '240', '185', '260', '185', '221', '205', '200', '170', '201', '205', '185', '205', '245', '220', '210', '220', '185', '175', '170', '180', '200', '210', '175', '220', '206', '180', '210', '195', '200', '200', '164', '180', '220', '195', '205', '170', '240', '210', '195', '200', '205', '192', '190', '170', '240', '200', '205', '175', '250', '220', '224', '210', '195', '180', '245', '175', '180', '215', '175', '180', '195', '230', '230', '205', '215', '195', '180', '205', '180', '190', '180', '190', '190', '220', '210', '255', '190', '230', '200', '205', '210', '225', '215', '220', '205', '200', '220', '197', '225', '187', '245', '185', '185', '175', '200', '180', '188', '225', '200', '210', '245', '213', '231', '165', '228', '210', '250', '191', '190', '200', '215', '254', '232', '180', '215', '220', '180', '200', '170', '195', '210', '200', '220', '165', '180', '200', '200', '170', '224', '220', '180', '198', '240', '239', '185', '210', '220', '200', '195', '220', '230', '170', '220', '230', '165', '205', '192', '210', '205', '200', '210', '185', '195', '202', '205', '195', '180', '200', '185', '240', '185', '220', '205', '205', '180', '201', '190', '208', '240', '180', '230', '195', '215', '190', '195', '215', '215', '220', '220', '230', '195', '190', '195', '209', '204', '170', '185', '205', '175', '210', '190', '180', '180', '160', '235', '200', '210', '180', '190', '197', '203', '205', '170', '200', '250', '200', '220', '200', '190', '170', '190', '220', '215', '206', '215', '185', '235', '188', '230', '195', '168', '190', '160', '200', '200', '189', '180', '190', '200', '220', '187', '240', '190', '180', '185', '210', '220', '219', '190', '193', '175', '180', '215', '210', '200', '190', '185', '220', '170', '195', '205', '195', '210', '190', '190', '180', '220', '190', '186', '185', '190', '180', '190', '170', '210', '240', '220', '180', '210', '210', '195', '160', '180', '205', '200', '185', '245', '190', '210', '200', '200', '222', '215', '240', '170', '220', '156', '190', '202', '221', '200', '190', '210', '190', '200', '165', '190', '185', '230', '208', '209', '175', '180', '200', '205', '200', '250', '210', '230', '244', '202', '240', '200', '215', '177', '210', '170', '215', '217', '198', '200', '220', '170', '200', '230', '231', '183', '192', '167', '190', '180', '180', '215', '160', '205', '223', '175', '170', '190', '240', '175', '230', '223', '196', '167', '195', '190', '250', '190', '190', '190', '170', '160', '150', '225', '220', '209', '210', '176', '260', '195', '190', '184', '180', '195', '195', '219', '225', '212', '202', '185', '200', '209', '200', '195', '228', '210', '190', '212', '190', '218', '220', '190', '235', '210', '200', '188', '210', '235', '188', '215', '216', '220', '180', '185', '200', '210', '220', '185', '231', '210', '195', '200', '205', '200', '190', '250', '185', '180', '170', '180', '208', '235', '215', '244', '220', '185', '230', '190', '200', '180', '190', '196', '180', '230', '224', '160', '178', '205', '185', '210', '180', '190', '200', '257', '190', '220', '165', '205', '200', '208', '185', '215', '170', '235', '210', '170', '180', '170', '190', '150', '230', '203', '260', '246', '186', '210', '198', '210', '215', '180', '200', '245', '200', '192', '192', '200', '192', '205', '190', '186', '170', '197', '219', '200', '220', '207', '225', '207', '212', '225', '170', '190', '210', '230', '210', '200', '238', '234', '222', '200', '190', '170', '220', '223', '210', '215', '196', '175', '175', '189', '205', '210', '180', '180', '197', '220', '228', '190', '204', '165', '216', '220', '208', '210', '215', '195', '200', '215', '229', '240', '207', '205', '208', '185', '190', '170', '208', '225', '190', '225', '185', '180', '165', '240', '220', '212', '163', '215', '175', '205', '210', '205', '208', '215', '180', '200', '230', '211', '230', '190', '220', '180', '205', '190', '180', '205', '190', '195']

a = ''
b = [int(x) for x in a.split('\n') if int(x) < 100]
c = [int(x) for x in a.split('\n') if int(x) > 100]
weight = [74, 74, 72, 72, 73, 69, 69, 71, 76, 71, 73, 73, 74, 74, 69, 70, 73, 75, 78, 79, 76, 74, 76, 72, 71, 75, 77, 74, 73, 74, 78, 73, 75, 73, 75, 75, 74, 69, 71, 74, 73, 73, 76, 74, 74, 70, 72, 77, 74, 70, 73, 75, 76, 76, 78, 74, 74, 76, 77, 81, 78, 75, 77, 75, 76, 74, 72, 72, 75, 73, 73, 73, 70, 70, 70, 76, 68, 71, 72, 75, 75, 75, 75, 68, 74, 78, 71, 73, 76, 74, 74, 79, 75, 73, 76, 74, 74, 73, 72, 74, 73, 74, 72, 73, 69, 72, 73, 75, 75, 73, 72, 72, 76, 74, 72, 77, 74, 77, 75, 76, 80, 74, 74, 75, 78, 73, 73, 74, 75, 76, 71, 73, 74, 76, 76, 74, 73, 74, 70, 72, 73, 73, 73, 73, 71, 74, 74, 72, 74, 71, 74, 73, 75, 75, 79, 73, 75, 76, 74, 76, 78, 74, 76, 72, 74, 76, 74, 75, 78, 75, 72, 74, 72, 74, 70, 71, 70, 75, 71, 71, 73, 72, 71, 73, 72, 75, 74, 74, 75, 73, 77, 73, 76, 75, 74, 76, 75, 73, 71, 76, 75, 72, 71, 77, 73, 74, 71, 72, 74, 75, 73, 72, 75, 75, 74, 72, 74, 71, 70, 74, 77, 77, 75, 75, 78, 75, 76, 73, 75, 75, 79, 77, 76, 71, 75, 74, 69, 71, 76, 72, 72, 70, 72, 73, 71, 72, 71, 73, 72, 73, 74, 74, 72, 75, 74, 74, 77, 75, 73, 72, 71, 74, 77, 75, 75, 75, 78, 78, 74, 76, 78, 76, 70, 72, 80, 74, 74, 71, 70, 72, 71, 74, 71, 72, 71, 74, 69, 76, 75, 75, 76, 73, 76, 73, 77, 73, 72, 72, 77, 77, 71, 74, 74, 73, 78, 75, 73, 70, 74, 72, 73, 73, 75, 75, 74, 76, 73, 74, 75, 75, 72, 73, 73, 72, 74, 78, 76, 73, 74, 75, 70, 75, 71, 72, 78, 75, 73, 73, 71, 75, 77, 72, 69, 73, 74, 72, 70, 75, 70, 72, 72, 74, 73, 74, 76, 75, 80, 72, 75, 73, 74, 74, 73, 75, 75, 71, 73, 75, 74, 74, 72, 74, 74, 74, 73, 76, 75, 72, 73, 73, 73, 72, 72, 72, 72, 71, 75, 75, 74, 73, 75, 79, 74, 76, 73, 74, 74, 72, 74, 74, 75, 78, 74, 74, 74, 77, 70, 73, 74, 73, 71, 75, 71, 72, 77, 74, 70, 77, 73, 72, 76, 71, 76, 78, 75, 73, 78, 74, 79, 75, 76, 72, 75, 75, 70, 72, 70, 74, 71, 76, 73, 76, 71, 69, 72, 72, 69, 73, 69, 73, 74, 74, 72, 71, 72, 72, 76, 76, 76, 74, 76, 75, 71, 72, 71, 73, 75, 76, 75, 71, 75, 74, 72, 73, 73, 73, 73, 76, 72, 76, 73, 73, 73, 75, 75, 77, 73, 72, 75, 70, 74, 72, 80, 71, 71, 74, 74, 73, 75, 76, 73, 77, 72, 73, 77, 76, 71, 75, 73, 74, 77, 71, 72, 73, 69, 73, 70, 74, 76, 73, 73, 75, 73, 79, 74, 73, 74, 77, 75, 74, 73, 77, 73, 77, 74, 74, 73, 77, 74, 77, 75, 77, 75, 71, 74, 70, 79, 72, 72, 70, 74, 74, 72, 73, 72, 74, 74, 76, 82, 74, 74, 70, 73, 73, 74, 77, 72, 76, 73, 73, 72, 74, 74, 71, 72, 75, 74, 74, 77, 70, 71, 73, 76, 71, 75, 74, 72, 76, 79, 76, 73, 76, 78, 75, 76, 72, 72, 73, 73, 75, 71, 76, 70, 75, 74, 75, 73, 71, 71, 72, 73, 73, 72, 69, 73, 78, 71, 73, 75, 76, 70, 74, 77, 75, 79, 72, 77, 73, 75, 75, 75, 73, 73, 76, 77, 75, 70, 71, 71, 75, 74, 69, 70, 75, 72, 75, 73, 72, 72, 72, 76, 75, 74, 69, 73, 72, 72, 75, 77, 76, 80, 77, 76, 79, 71, 75, 73, 76, 77, 73, 76, 70, 75, 73, 75, 70, 69, 71, 72, 72, 73, 70, 70, 73, 76, 75, 72, 73, 79, 71, 72, 74, 74, 74, 72, 76, 76, 72, 72, 71, 72, 72, 70, 77, 74, 72, 76, 71, 76, 71, 73, 70, 73, 73, 72, 71, 71, 71, 72, 72, 74, 74, 74, 71, 72, 75, 72, 71, 72, 72, 72, 72, 74, 74, 77, 75, 73, 75, 73, 76, 72, 77, 75, 72, 71, 71, 75, 72, 73, 73, 71, 70, 75, 71, 76, 73, 68, 71, 72, 74, 77, 72, 76, 78, 81, 72, 73, 76, 72, 72, 74, 76, 73, 76, 75, 70, 71, 74, 72, 73, 76, 76, 73, 71, 68, 71, 71, 74, 77, 69, 72, 76, 75, 76, 75, 76, 72, 74, 76, 74, 72, 75, 78, 77, 70, 72, 79, 74, 71, 68, 77, 75, 71, 72, 70, 72, 72, 73, 72, 74, 72, 72, 75, 72, 73, 74, 72, 78, 75, 72, 74, 75, 75, 76, 74, 74, 73, 74, 71, 74, 75, 76, 74, 76, 76, 73, 75, 75, 74, 68, 72, 75, 71, 70, 72, 73, 72, 75, 74, 70, 76, 71, 82, 72, 73, 74, 71, 75, 77, 72, 74, 72, 73, 78, 77, 73, 73, 73, 73, 73, 76, 75, 70, 73, 72, 73, 75, 74, 73, 73, 76, 73, 75, 70, 77, 72, 77, 74, 75, 75, 75, 75, 72, 74, 71, 76, 71, 75, 76, 83, 75, 74, 76, 72, 72, 75, 75, 72, 77, 73, 72, 70, 74, 72, 74, 72, 71, 70, 71, 76, 74, 76, 74, 74, 74, 75, 75, 71, 71, 74, 77, 71, 74, 75, 77, 76, 74, 76, 72, 71, 72, 75, 73, 68, 72, 69, 73, 73, 75, 70, 70, 74, 75, 74, 74, 73, 74, 75, 77, 73, 74, 76, 74, 75, 73, 76, 78, 75, 73, 77, 74, 72, 74, 72, 71, 73, 75, 73, 67, 67, 76, 74, 73, 70, 75, 70, 72, 77, 79, 78, 74, 75, 75, 78, 76, 75, 69, 75, 72, 75, 73, 74, 75, 75, 73]
height = [180, 215, 210, 210, 188, 176, 209, 200, 231, 180, 188, 180, 185, 160, 180, 185, 189, 185, 219, 230, 205, 230, 195, 180, 192, 225, 203, 195, 182, 188, 200, 180, 200, 200, 245, 240, 215, 185, 175, 199, 200, 215, 200, 205, 206, 186, 188, 220, 210, 195, 200, 200, 212, 224, 210, 205, 220, 195, 200, 260, 228, 270, 200, 210, 190, 220, 180, 205, 210, 220, 211, 200, 180, 190, 170, 230, 155, 185, 185, 200, 225, 225, 220, 160, 205, 235, 250, 210, 190, 160, 200, 205, 222, 195, 205, 220, 220, 170, 185, 195, 220, 230, 180, 220, 180, 180, 170, 210, 215, 200, 213, 180, 192, 235, 185, 235, 210, 222, 210, 230, 220, 180, 190, 200, 210, 194, 180, 190, 240, 200, 198, 200, 195, 210, 220, 190, 210, 225, 180, 185, 170, 185, 185, 180, 178, 175, 200, 204, 211, 190, 210, 190, 190, 185, 290, 175, 185, 200, 220, 170, 220, 190, 220, 205, 200, 250, 225, 215, 210, 215, 195, 200, 194, 220, 180, 180, 170, 195, 180, 170, 206, 205, 200, 225, 201, 225, 233, 180, 225, 180, 220, 180, 237, 215, 190, 235, 190, 180, 165, 195, 200, 190, 190, 185, 185, 205, 190, 205, 206, 220, 208, 170, 195, 210, 190, 211, 230, 170, 185, 185, 241, 225, 210, 175, 230, 200, 215, 198, 226, 278, 215, 230, 240, 184, 219, 170, 218, 190, 225, 220, 176, 190, 197, 204, 167, 180, 195, 220, 215, 185, 190, 205, 205, 200, 210, 215, 200, 205, 211, 190, 208, 200, 210, 232, 230, 210, 220, 210, 202, 212, 225, 170, 190, 200, 237, 220, 170, 193, 190, 150, 220, 200, 190, 185, 185, 200, 172, 220, 225, 190, 195, 219, 190, 197, 200, 195, 210, 177, 220, 235, 180, 195, 195, 190, 230, 190, 200, 190, 190, 200, 200, 184, 200, 180, 219, 187, 200, 220, 205, 190, 170, 160, 215, 175, 205, 200, 214, 200, 190, 180, 205, 220, 190, 215, 235, 191, 200, 181, 200, 210, 240, 185, 165, 190, 185, 175, 155, 210, 170, 175, 220, 210, 205, 200, 205, 195, 240, 150, 200, 215, 202, 200, 190, 205, 190, 160, 215, 185, 200, 190, 210, 185, 220, 190, 202, 205, 220, 175, 160, 190, 200, 229, 206, 220, 180, 195, 175, 188, 230, 190, 200, 190, 219, 235, 180, 180, 180, 200, 234, 185, 220, 223, 200, 210, 200, 210, 190, 177, 227, 180, 195, 199, 175, 185, 240, 210, 180, 194, 225, 180, 205, 193, 230, 230, 220, 200, 249, 190, 208, 245, 250, 160, 192, 220, 170, 197, 155, 190, 200, 220, 210, 228, 190, 160, 184, 180, 180, 200, 176, 160, 222, 211, 195, 200, 175, 206, 240, 185, 260, 185, 221, 205, 200, 170, 201, 205, 185, 205, 245, 220, 210, 220, 185, 175, 170, 180, 200, 210, 175, 220, 206, 180, 210, 195, 200, 200, 164, 180, 220, 195, 205, 170, 240, 210, 195, 200, 205, 192, 190, 170, 240, 200, 205, 175, 250, 220, 224, 210, 195, 180, 245, 175, 180, 215, 175, 180, 195, 230, 230, 205, 215, 195, 180, 205, 180, 190, 180, 190, 190, 220, 210, 255, 190, 230, 200, 205, 210, 225, 215, 220, 205, 200, 220, 197, 225, 187, 245, 185, 185, 175, 200, 180, 188, 225, 200, 210, 245, 213, 231, 165, 228, 210, 250, 191, 190, 200, 215, 254, 232, 180, 215, 220, 180, 200, 170, 195, 210, 200, 220, 165, 180, 200, 200, 170, 224, 220, 180, 198, 240, 239, 185, 210, 220, 200, 195, 220, 230, 170, 220, 230, 165, 205, 192, 210, 205, 200, 210, 185, 195, 202, 205, 195, 180, 200, 185, 240, 185, 220, 205, 205, 180, 201, 190, 208, 240, 180, 230, 195, 215, 190, 195, 215, 215, 220, 220, 230, 195, 190, 195, 209, 204, 170, 185, 205, 175, 210, 190, 180, 180, 160, 235, 200, 210, 180, 190, 197, 203, 205, 170, 200, 250, 200, 220, 200, 190, 170, 190, 220, 215, 206, 215, 185, 235, 188, 230, 195, 168, 190, 160, 200, 200, 189, 180, 190, 200, 220, 187, 240, 190, 180, 185, 210, 220, 219, 190, 193, 175, 180, 215, 210, 200, 190, 185, 220, 170, 195, 205, 195, 210, 190, 190, 180, 220, 190, 186, 185, 190, 180, 190, 170, 210, 240, 220, 180, 210, 210, 195, 160, 180, 205, 200, 185, 245, 190, 210, 200, 200, 222, 215, 240, 170, 220, 156, 190, 202, 221, 200, 190, 210, 190, 200, 165, 190, 185, 230, 208, 209, 175, 180, 200, 205, 200, 250, 210, 230, 244, 202, 240, 200, 215, 177, 210, 170, 215, 217, 198, 200, 220, 170, 200, 230, 231, 183, 192, 167, 190, 180, 180, 215, 160, 205, 223, 175, 170, 190, 240, 175, 230, 223, 196, 167, 195, 190, 250, 190, 190, 190, 170, 160, 150, 225, 220, 209, 210, 176, 260, 195, 190, 184, 180, 195, 195, 219, 225, 212, 202, 185, 200, 209, 200, 195, 228, 210, 190, 212, 190, 218, 220, 190, 235, 210, 200, 188, 210, 235, 188, 215, 216, 220, 180, 185, 200, 210, 220, 185, 231, 210, 195, 200, 205, 200, 190, 250, 185, 180, 170, 180, 208, 235, 215, 244, 220, 185, 230, 190, 200, 180, 190, 196, 180, 230, 224, 160, 178, 205, 185, 210, 180, 190, 200, 257, 190, 220, 165, 205, 200, 208, 185, 215, 170, 235, 210, 170, 180, 170, 190, 150, 230, 203, 260, 246, 186, 210, 198, 210, 215, 180, 200, 245, 200, 192, 192, 200, 192, 205, 190, 186, 170, 197, 219, 200, 220, 207, 225, 207, 212, 225, 170, 190, 210, 230, 210, 200, 238, 234, 222, 200, 190, 170, 220, 223, 210, 215, 196, 175, 175, 189, 205, 210, 180, 180, 197, 220, 228, 190, 204, 165, 216, 220, 208, 210, 215, 195, 200, 215, 229, 240, 207, 205, 208, 185, 190, 170, 208, 225, 190, 225, 185, 180, 165, 240, 220, 212, 163, 215, 175, 205, 210, 205, 208, 215, 180, 200, 230, 211, 230, 190, 220, 180, 205, 190, 180, 205, 190, 195]

np_weight = np.array(weight)
np_height = np.array(height)
print(weight)
print(np_weight)

w_and_h = np.array([np_weight, np_height]) # 2 rows x 1000+ columns
# how to invert colunms to rows ???
print(w_and_h)

short1 = [74, 74, 72, 70]
short2 = [180, 215, 210, 210]

np_short1 = np.array(short1)
np_short2 = np.array(short2)
np_short12 = np.array([short1, short2])
len(np_short1)

# np_short3 = np_short2 + np_short2 # not working
# for index in range(len(np_short1)):
    
np_short21 = np_short12.T  # yes yes yes. 
# no iterarion over loop  ^^ to append in right order
np_full = np.array([np_weight, np_height]).T

#=============
r1 = [1,2,3,5,7,7,5,4,7,3,7]
r2 = [2,3,7,8,2,2,7,8,8,3,8]
r3 = [6,6,5,2,8,9,3,3,8,8,5]

rr = [r1,r2,r3]
np_rr = np.array(rr)
np_rr_t = np_rr.transpose()
#np_rr_T = np_rr.T

qw = np.random.rand(1)
qw < 1
type(np_rr_t[-1])

np_r3 = np.array(r3)
np_r3 >= 4
np_r3_gt4 = np_r3[np_r3 >= 4]
len(np_r3)
len(np_r3_gt4)
stat = len(np_r3_gt4)/len(np_r3) 
# 72.72% of numbers in array is more than or equal 4

r3.remove(6)
